language: python
python:
  - "3.11" # Use a stable Python version
dist: focal
os: linux

services:
  - postgresql

env:
  - BASE_PATH="backend/nightwalkers" FRONTEND_PATH="frontend"

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y gdal-bin postgis postgresql-13-postgis-3

cache:
  directories:
    - ~/.cache/pip
    - ~/.npm # Cache global npm packages
    - ~/.cache/npm # Cache npm cache
    - frontend/node_modules # Cache project dependencies
    - frontend/build
    - frontend/.next/cache
  npm: true # Add explicit npm caching
  pip: true # Add explicit pip caching

# Install dependencies
install:
  - pip install -r backend/nightwalkers/requirements.txt
  - pip install black flake8 coverage coveralls

  # Install Node.js and frontend dependencies
  - nvm install 22.9 # Install Node.js 22 (or the version your Next.js app requires)
  - npm install -g npm@10.8 # Update npm to the latest version
  - cd $FRONTEND_PATH && npm install && cd .. # Install frontend dependencies

# Make the script executable
before_script:
  - chmod +x deploy.sh
  - chmod +x deploy-to-production.sh
  - chmod +x deploy-to-develop.sh
  - chmod +x deploy-to-netlify.sh
  - psql -c 'create database nightwalkers_test;' -U postgres
    # Create a test database
  - psql -c 'create database nightwalkers_test;' -U postgres
  # Try creating the PostGIS extension
  - psql -c 'create extension postgis;' -U postgres -d nightwalkers_test || echo "Failed to create PostGIS extension"
  # If the direct creation failed, try an alternative approach
  - sudo apt-get install -y postgresql-13-postgis-scripts || echo "Failed to install PostGIS scripts"
  - sudo -u postgres psql -c "CREATE EXTENSION IF NOT EXISTS postgis;" -d nightwalkers_test || echo "Failed alternative PostGIS creation"


# Run checks and tests
script:
  - pwd

  - black --check backend/nightwalkers/
  - flake8 backend/nightwalkers/

  - coverage run --source=$BASE_PATH $BASE_PATH/manage.py test $BASE_PATH
  - coverage report # Print coverage report
  - coverage xml # Generate coverage XML for coveralls

  # Frontend build
  - cd $FRONTEND_PATH && npm run build && cd .. # Build the Next.js app

# Report coverage to coveralls
after_success:
  - coveralls --service=travis-pro

# Deploy to Render and Netlify upon successful tests for the main and develop branches
deploy:
  provider: script
  script: ./deploy.sh
  cleanup: false
  on:
    all_branches: true
    condition: $TRAVIS_BRANCH =~ ^(main|develop)$
# Notifications (optional)
notifications:
  email:
    on_success: never
    on_failure: always
